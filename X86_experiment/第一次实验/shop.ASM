.386
DATA    SEGMENT USE16
BNAME   DB 'ZHANCHENG',0
BPASS   DB 'test',0,0
N       EQU 30
CHANGE	DB 0AH,0DH,'$'
LEAVES	DB '---------------',0AH,0DH,'$'
SNAME   DB 'SHOP',0,'$'
GA1     DB 'PEN',7 DUP(0),10
	    DW 35,56,70,25,?
GA2     DB 'BOOK',6 DUP(0),9
	    DW 12,30,25,5,?
GAN     DB N-2 DUP('TempValue',0,8,15,0,20,0,30,0,2,0,?,?)
REMIND1	DB 'Please input your account number!',0AH,0DH,'$'
REMIND2 DB 'Please input your password!',0AH,0DH,'$'
REINPUT	DB 'The account number or password is not right.Please try again!',0AH,0DH,'$'
REMIND3	DB 'Please input the name of commodity!',0AH,0DH,'$'
REMIND4 DB 'There is not this commodity!Please try again!',0AH,0DH,'$'
IN_NAME	DB 20
		DB ?
		DB 20 DUP(0)
IN_PWD	DB 20
		DB ?
		DB 20 DUP(0)
CO_NAME	DB 20
		DB ?
		DB 20 DUP(0)
AUTH	DB 0
DATA    ENDS
STACK   SEGMENT USE16 STACK
	    DW 50 DUP(0)
STACK   ENDS
CODE	SEGMENT USE16
		ASSUME DS:DATA,SS:STACK,CS:CODE
START:	MOV AX,DATA
		MOV DS,AX
		LEA DX,SNAME
		MOV AH,9
		INT 21H
		
		LEA DX,CHANGE
		MOV	AH,9
		INT 21H
		
		LEA DX,LEAVES
		MOV AH,9
		INT 21H
		
INPUT:	LEA DX,CHANGE
		MOV	AH,9
		INT 21H
		
		MOV AX,DATA
		MOV DS,AX
		
		LEA DX,REMIND1
		MOV AH,9
		INT 21H
		
		LEA DX,IN_NAME
		MOV AH,10
		INT 21H
		
		LEA DX,CHANGE
		MOV	AH,9
		INT 21H
		
		LEA DX,REMIND2
		MOV AH,9
		INT 21H
		
		LEA DX,IN_PWD
		MOV AH,10
		INT 21H
		
		LEA DX,CHANGE
		MOV	AH,9
		INT 21H
		
DECIDE:	MOV AX,DATA
		MOV DS,AX
		
CUST:	LEA DI,IN_NAME
		ADD DI,2
		
		MOV AH,0DH
		CMP AH,[DI]
		JE	ISCUST
		
CUSTEND:NOP
		
WTQ_1:	MOV AH,'q'
		CMP AH,[DI]
		JE	WTQ_2
		JMP SHORT READY
		
WTQ_2:	MOV AH,0DH
		ADD DI,1
		CMP	AH,[DI]
		JE QUIT
		
WTQEND:	NOP
		
READY:	LEA BX,BNAME ;判断阶段的准备
		LEA DI,IN_NAME
		ADD DI,2
		MOV SI,OFFSET IN_NAME + 1
		MOV CL,[SI]
		MOV CH,0
		
SACC:	MOV AH,[BX] ;循环判断账号是否正确
		CMP AH,[DI]
		JNE NOTR
		ADD BX,1
		ADD DI,1
		LOOP SACC
		
		MOV AH,[BX]
		CMP AH,0
		JNE NOTR
		
SACCEND:NOP
		
		LEA BX,BPASS
		LEA DI,IN_PWD
		ADD DI,2
		MOV SI,OFFSET IN_PWD + 1
		MOV CL,[SI]
		MOV CH,0
		
SPWD:	MOV AH,[BX] ; 循环判断密码是否正确
		CMP AH,[DI]
		JNE NOTR
		ADD BX,1
		ADD DI,1
		LOOP SPWD
		
		MOV AH,[BX]
		CMP AH,0
		JNE NOTR
		
SPWDEND:JMP FAR PTR ISBOSS
		
NOTR:	LEA DX,REINPUT ;账号密码不对的情况
		MOV AH,9
		INT 21H
		JMP FAR PTR INPUT

ISCUST:	MOV	BX,OFFSET AUTH ;将判断的结果传入AUTH变量
		MOV AH,0
		MOV [BX],AH
		JMP SHORT PSEARCH
		
ISBOSS:	MOV	BX,OFFSET AUTH ;将判断的结果传入AUTH变量
		MOV AH,1
		MOV [BX],AH
		JMP SHORT PSEARCH
		
PSEARCH:LEA DX,REMIND3 ;提示用户输入商品的名称
		MOV AH,9
		INT 21H
		
		LEA DX,CO_NAME
		MOV AH,10
		INT 21H
		
		LEA DX,CHANGE
		MOV	AH,9
		INT 21H
		
SEARCH:	MOV CX,N;找到商店商品所在的地址
		PUSH CX
		LEA	BX,GA1
		PUSH BX
		
		LEA DI,CO_NAME ;找到用户输入的商品所在的存储地址
		ADD DI,2
		MOV SI,OFFSET CO_NAME + 1
		MOVZX	CX,BYTE PTR[SI]
		MOV BP,CX;记录输入商品的名称的长度
		
FJUDGE:	MOV AH,[DI] ;判断输入商品名称时是否只输入了回车
		CMP AH,0DH
		JE	INPUT
		
SJUDGE:	MOV CX,BP
		LEA DI,CO_NAME ;找到用户输入的商品所在的存储地址
		ADD DI,2
		
JUDGE:	MOV AH,[BX] ;开始判断
		CMP AH,[DI]
		JNE NOMARRY
		INC BX
		INC DI
		LOOP JUDGE
		
		MOV AH,[BX]
		CMP AH,0
		JNE NOMARRY
		POP	BX;存储找到的商品地址
		POP CX
		MOV DX,N
		SUB DX,CX
		MOV CX,DX
		LEA BX,GA1
		
WHERE:	ADD BX,21;寻找商品地址并在寄存器中存储
		LOOP WHERE
		
		JMP SHORT FOUND
		
NOMARRY:POP BX
		ADD BX,21
		POP CX
		DEC CX
		CMP CX,0
		JE	NOTHAVE
		PUSH CX
		PUSH BX
		JMP SHORT SJUDGE
		
		
NOTHAVE:LEA DX,REMIND4
		MOV AH,9
		INT 21H
		JMP FAR PTR PSEARCH
		
FOUND:	LEA DI,AUTH
		MOV AH,[DI]
		CMP AH,1
		JNE RECOMM
		LEA DI,CO_NAME
		ADD DI,2
		MOV CX,BP
		
OUTCO:	MOV DL,[DI]
		MOV AH,2
		INT 21H
		INC DI
		LOOP OUTCO
		JMP FAR PTR INPUT
		
RECOMM:	MOV AX,[BX+13]
		MOVZX EAX,AX
		MOV EDX,EAX;EDX 售价
		CMP EDX,0
		JE	LEVELA
		MOV AL,[BX+10]
		MOV AH,0
		MOVZX EAX,AX;EAX 折扣*10
		MUL	EDX;EDX存储高位，EAX存储低位
		MOV ECX,EAX
		
		MOV AX,[BX+11];进价
		MOVZX EAX,AX
		MOV EDX,1280
		MUL EDX;EDX存储高位，EAX存储低位
		DIV ECX;EAX为商，EDX为余数
		
		MOV EDI,EAX;进价*1280与实际售价*折扣*10的商
	
		MOV AX,[BX+15];进货量
		MOVZX EAX,AX
		MOV ECX,EAX
		MOV AX,[BX+17];销售量
		MOVZX EAX,AX
		MOV EDX,128
		MUL EDX;EDX存储高位，EAX存储低位
		DIV ECX;EAX为商，EDX为余数
		
		MOV ESI,EAX
		
		ADD EDI,ESI;商品推荐度存储于EDI,DS:01F3附近
		
LEVEL:	CMP EDI,100
		JNS	LEVELA
		CMP EDI,50
		JNS LEVELB
		CMP EDI,10
		JNS LEVELC
		JNS LEVELF
		
LEVELA:	MOV DL,'A'
		MOV	AH,2
		INT 21H
		JMP FAR PTR INPUT

LEVELB:	MOV DL,'B'
		MOV	AH,2
		INT 21H
		JMP FAR PTR INPUT

LEVELC:	MOV DL,'C'
		MOV	AH,2
		INT 21H
		JMP FAR PTR INPUT

LEVELF:	MOV DL,'F'
		MOV	AH,2
		INT 21H
		JMP FAR PTR INPUT
		
QUIT:	MOV AH,4CH
		INT 21H
		
CODE	ENDS
		END	START